<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <title>葡萄藤PPT</title>

    <link rel="stylesheet" href="https://ptteng.github.io/PPT/css/reveal/reveal.css">

    <!-- PPT主题，可以在/css/reveal/theme/中选择其他主题，目前暂时只能使用该模板 -->
    <link rel="stylesheet" href="https://ptteng.github.io/PPT/css/reveal/theme/ptt.css">

    <!-- syntax highlighting 代码高亮主题 -->
    <link rel="stylesheet" href="https://ptteng.github.io/PPT/lib/reveal/css/zenburn.css">

    <!-- 打印和PDF输出样式 -->
    <script>
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://ptteng.github.io/PPT/css/reveal/print/pdf.css' : '../css/reveal/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    </script>
</head>
<body>
<img src="https://ptteng.github.io/PPT/img/demo/logo.png" alt="" usemap="#pttmap" class="base-logo">
<map name="pttmap">
    <area shape="rect" coords="0,0,276,58" href="http://www.jnshu.com" alt="" target="_blank"/>
</map>
<div class="reveal">
    <div class="slides">
        <section>
            <h2>什么是JSON？</h2>
            <p></p>
            <h3>java分享会</h3>
            <p>分享人：杨舜</p>
        </section>
        <section>
            <p>1.背景介绍</p>
            <p>2.知识剖析</p>
            <p>3.常见问题</p>
            <p>4.解决方案</p>
            <p>5.编码实战</p>
            <p>6.扩展思考</p>
            <p>7.参考文献</p>
            <p>8.更多讨论</p>
        </section>
        <section>
            <h3>1.背景介绍</h3>
        </section>
 
        <section>
  
         <p>JSON（JavaScript Object Notation)是一种轻量级的数据交换格式，易于阅读和编写，同时也易于机器解析和生成。</p>
         <p>JSON是由道格拉斯·克罗克福特在2001年开始推广使用的数据格式，在2005年-2006年正式成为主流的数据格式，雅虎和谷歌就在那时候开始广泛地使用JSON格式。在这之前当时通用的数据交换语言是XML，但是道格拉斯·克罗克福特认为XML的生成和解析都过于麻烦，所以他提出一种更加简化的格式，就是我们现在使用的JSON。</p>
            
    </section>

        <section>
            <h3>2.知识剖析</h3>
        </section>

        <section>
        	<p>为什么要用json？</p>
        	<p>JSON类似于XML、比XML更小、更快、更容易解析。但同时XML也有它不可替代性，应根据使用场景进行更合适的选择</p>
        	<p>JSON语法简单，很容易理解，并且对象信息自描述，数据传输量小不占用宽带</p>
        	<p>JSON支持的语言包括C、C#、Java、JavaScript，PHP，Python、Ruby等等</p>
        	<P>对于Ajax应用程序来说，JSON比XML更快捷，更易用</P>
        	
        </section>

        

       <section>
           <p>JSON的基本语法</p>
     <p>1.并列的数据之间用逗号(,)分隔</p>
     <p>2.映射用冒号(:)表示</p>
     <p>3.映射的集合用大括号({})表示</p>
     <p>4.并列数据的集合用方括号表示([])表示</p>    
 

      </section>
      <section>
      <p>下面是一个json格式的例子：</p>
       <p>"professionList": [{</p>
    
       <p>"id": 68,</p>
       <p>"professionName": "java工程师",</p>
       <p>"cId": 3,</p>
       <p>"releaseAt": 1502333653768,</p>
       <p>"responsibility": "负责项目的更新迭代",</p>
       <p>"requirement": "认识26个字母就行",</p>
       <p>"welfare": "天天玩"]}</p>

       <p></p>
        <p>可以看到它们是以键值对的形式表现，这里有个规定键值对中：键必须用双引号括起来，值可以是数字、字符串(需要在双引号中)，布尔值、数组、对象、null。6种类型</p>
      </section>

       <section>
            <h3>3.常见问题</h3>
       </section>
        <section>
       <p>后端怎样传给前端一个JSON数据?</p>
       <p>使用posman测试接口时怎么传给后端json数据？</p>
		</section>
        <section>
            <h3>4.解决方案</h3>
            
            </section>
        <section>
            <p>我们用的是SpringMVC框架，需要添加一个json-taglib.jar包</P>

        </section>

   <section>
            <h3>5.编码实战</h3>
        </section>

        <section>
        	<h3>6.扩展思考</h3>
        </section>

        <section>
     

        </section>
  
        <section>
            <h3>7.参考文献</h3>
            <p>百度</p>
        </section>
        <section>
            <h3>8.更多讨论</h3>
            <p></p>

        </section>
        <section>
            <h4>鸣谢</h4>
            <p>感谢观看,如有出错,恳请指正</p>
            <p><small>BY : 杨舜</small></p>
        </section>

    </div>
</div>

<script src="https://ptteng.github.io/PPT/lib/reveal/js/head.min.js"></script>
<script src="https://ptteng.github.io/PPT/lib/reveal/reveal.js"></script>

<script>
    // 以下为常见配置属性的默认值
    // {
    //  controls: true, // 是否在右下角展示控制条
    //  progress: true, // 是否显示演示的进度条
    //  slideNumber: false, // 是否显示当前幻灯片的页数编号，也可以使用代码slideNumber: 'c / t' ，表示当前页/总页数。
    //  history: false, // 是否将每个幻灯片改变加入到浏览器的历史记录中去
    //  keyboard: true, // 是否启用键盘快捷键来导航
    //  overview: true, // 是否启用幻灯片的概览模式，可使用"Esc"或"o"键来切换概览模式
    //  center: true, // 是否将幻灯片垂直居中
    //  touch: true, // 是否在触屏设备上启用触摸滑动切换
    //  loop: false, // 是否循环演示
    //  rtl: false, // 是否将演示的方向变成RTL，即从右往左
    //  fragments: true, // 全局开启和关闭碎片。
    //  autoSlide: 0, // 两个幻灯片之间自动切换的时间间隔（毫秒），当设置成 0 的时候则禁止自动切换，该值可以被幻灯片上的 ` data-autoslide` 属性覆盖
    //  transition: 'default', // 切换过渡效果，有none/fade/slide/convex/concave/zoom
    //  transitionSpeed: 'default', // 过渡速度，default/fast/slow
    //  mouseWheel: true, //是否启用通过鼠标滚轮来切换幻灯片
    // }
    // 初始化幻灯片
    Reveal.initialize({
        history: true,
        dependencies: [
            { src: 'https://ptteng.github.io/PPT/plugin/markdown/marked.js' },
            { src: 'https://ptteng.github.io/PPT/plugin/markdown/markdown.js' },
            { src: 'https://ptteng.github.io/PPT/plugin/notes/notes.js', async: true },
            { src: 'https://ptteng.github.io/PPT/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }
        ]
    });
</script>
</body>
</html>
